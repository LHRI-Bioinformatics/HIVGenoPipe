/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            pattern: '*.csv'
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: TRIMMOMATIC {
        ext.args2 = 'ILLUMINACLIP:/usr/local/share/trimmomatic-0.39-2/adapters/NexteraPE-PE.fa:2:30:12 SLIDINGWINDOW:4:25 LEADING:20 TRAILING:20 MINLEN:100'
    }

    withName: BBTOOLS_SEAL {
        ext.args = 'k=21'
    }

    withName: BBMAP_BBNORM {
        ext.args = 'target=1000 mindepth=100 maxdepth=1000'
    }

    withName: TRINITY {
        ext.args = '--min_contig_length 300 --min_kmer_cov 20 --min_glue 20'
    }

    withName: MAFFT {
        ext.args = '--adjustdirectionaccurately --localpair  --op 5 --ep 2'
    }

    withName: PYSAMSTATS {
        ext.args = '--min-baseq=15'
    }

     withName: PYSAMSTATS_PARSER {
        ext.args = '-a 5 15 -d 200 -i -t -c'
    }

    withName: 'REPORT_CHECK_COVERAGE' {
        ext.args = '-f 2253 -t 5095 -c'
        publishDir = [
            path: { "${params.outdir}/report/check_coverage" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'REPORT_NGS_STATS_ALL' {
        publishDir = [
            path: { "${params.outdir}/report/ngs_stats" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'REPORT_NGS_STATS_PASS' {
        publishDir = [
            path: { "${params.outdir}/report/ngs_stats" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: SAMTOOLS_CONSENSUS{
        ext.args = '--min-depth 200'
    }

    withName: BWA_MEM_2 {
        publishDir = [
            path: { "${params.outdir}/self_align_bwa" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
    }

    withName: SAMTOOLS_DEPTH {
        ext.args = '-aa -d 0'
    }

//REF align stuff
    withName: SAMTOOLS_DEPTH_REF {
        ext.args = '-aa -d 0'
        publishDir = [
            path: { "${params.outdir}/report/ref_depth" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
    }

    withName: BWA_MEM_REF {
        publishDir = [
            path: { "${params.outdir}/ref_align_bwa" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
    }

    withName: REPORT_PLOT_DEPTH_REF {
        publishDir = [
        path: { "${params.outdir}/report/ref_plot_depth" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

//REPORT organizing
    withName: REPORT_STANFORD_JSON {
        publishDir = [
        path: { "${params.outdir}/report/stanford_json" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: REPORT_STANFORD_SUMMARY {
        publishDir = [
        path: { "${params.outdir}/report/stanford_reports" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

if (params.positive_control_ref) {
//CONTROL_TEST options
    withName: '.*:CONTROL_TEST:BWA_INDEX' {
        publishDir = [
            path: { "${params.outdir}/control_test/bwa" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: '.*:CONTROL_TEST:BWA_MEM' {
        publishDir = [
            path: { "${params.outdir}/control_test/bwa" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: '.*:CONTROL_TEST:SAMTOOLS_INDEX' {
        publishDir = [
            path: { "${params.outdir}/control_test/samtools" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: '.*:CONTROL_TEST:PYSAMSTATS' {
        ext.args = '--min-baseq=15'
        publishDir = [
            path: { "${params.outdir}/control_test/pysamstats" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: '.*:CONTROL_TEST:PYSAMSTATS_PARSER' {
        ext.args = '-a 1 2 5 15 -d 200 -i -t -c'
        publishDir = [
            path: { "${params.outdir}/control_test/pysamstats" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: '.*:CONTROL_TEST:REPORT_CHECK_COVERAGE' {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/control_test/check_coverage" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: '.*:CONTROL_TEST:SAMTOOLS_STATS' {
        publishDir = [
            path: { "${params.outdir}/control_test/samtools/stats" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: '.*:CONTROL_TEST:SAMTOOLS_DEPTH' {
        ext.args = '-aa -d 0'
        publishDir = [
            path: { "${params.outdir}/control_test/samtools/depth" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: '.*:CONTROL_TEST:REPORT_SAMTOOLS_DEPTH_AND_STATS' {
        publishDir = [
            path: { "${params.outdir}/control_test/samtools" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: '.*:CONTROL_TEST:REPORT_NGS_STATS' {
        publishDir = [
            path: { "${params.outdir}/control_test/ngs_stats" },
            mode: params.publish_dir_mode,
        ]
    }
}

//
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
